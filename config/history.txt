  649    apiGroup: rbac.authorization.k8s.io
  650    kind: ClusterRole
  651    name: app-viewer-cluster-access
  652  subjects:
  653    - kind: Group
  654      name: GROUP-FOR-APP-VIEWER
  655      apiGroup: rbac.authorization.k8s.io
  656  ---
  657  apiVersion: rbac.authorization.k8s.io/v1
  658  kind: RoleBinding
  659  metadata:
  660    name: dev-permit-app-editor
  661  roleRef:
  662    apiGroup: rbac.authorization.k8s.io
  663    kind: ClusterRole
  664    name: app-editor
  665  subjects:
  666    - kind: Group
  667      name: GROUP-FOR-APP-EDITOR
  668      apiGroup: rbac.authorization.k8s.io
  669  ---
  670  apiVersion: rbac.authorization.k8s.io/v1
  671  kind: ClusterRoleBinding
  672  metadata:
  673    name: YOUR-NAMESPACE-permit-app-editor
  674  roleRef:
  675    apiGroup: rbac.authorization.k8s.io
  676    kind: ClusterRole
  677    name: app-editor-cluster-access
  678  subjects:
  679    - kind: Group
  680      name: GROUP-FOR-APP-EDITOR
  681      apiGroup: rbac.authorization.k8s.io
  682  EOF
  683  cat <<EOF | kubectl -n default apply -f -
  684  apiVersion: rbac.authorization.k8s.io/v1
  685  kind: RoleBinding
  686  metadata:
  687    name: dev-permit-app-viewer
  688  roleRef:
  689    apiGroup: rbac.authorization.k8s.io
  690    kind: ClusterRole
  691    name: app-viewer
  692  subjects:
  693    - kind: Group
  694      name: GROUP-FOR-APP-VIEWER
  695      apiGroup: rbac.authorization.k8s.io
  696  ---
  697  apiVersion: rbac.authorization.k8s.io/v1
  698  kind: ClusterRoleBinding
  699  metadata:
  700    name: YOUR-NAMESPACE-permit-app-viewer
  701  roleRef:
  702    apiGroup: rbac.authorization.k8s.io
  703    kind: ClusterRole
  704    name: app-viewer-cluster-access
  705  subjects:
  706    - kind: Group
  707      name: GROUP-FOR-APP-VIEWER
  708      apiGroup: rbac.authorization.k8s.io
  709  ---
  710  apiVersion: rbac.authorization.k8s.io/v1
  711  kind: RoleBinding
  712  metadata:
  713    name: dev-permit-app-editor
  714  roleRef:
  715    apiGroup: rbac.authorization.k8s.io
  716    kind: ClusterRole
  717    name: app-editor
  718  subjects:
  719    - kind: Group
  720      name: GROUP-FOR-APP-EDITOR
  721      apiGroup: rbac.authorization.k8s.io
  722  ---
  723  apiVersion: rbac.authorization.k8s.io/v1
  724  kind: ClusterRoleBinding
  725  metadata:
  726    name: YOUR-NAMESPACE-permit-app-editor
  727  roleRef:
  728    apiGroup: rbac.authorization.k8s.io
  729    kind: ClusterRole
  730    name: app-editor-cluster-access
  731  subjects:
  732    - kind: Group
  733      name: GROUP-FOR-APP-EDITOR
  734      apiGroup: rbac.authorization.k8s.io
  735  EOF
  736  cat <<EOF | kubectl -n default apply -f -
  737  apiVersion: rbac.authorization.k8s.io/v1
  738  kind: RoleBinding
  739  metadata:
  740    name: dev-permit-app-viewer
  741  roleRef:
  742    apiGroup: rbac.authorization.k8s.io
  743    kind: ClusterRole
  744    name: app-viewer
  745  subjects:
  746    - kind: Group
  747      name: GROUP-FOR-APP-VIEWER
  748      apiGroup: rbac.authorization.k8s.io
  749  ---
  750  apiVersion: rbac.authorization.k8s.io/v1
  751  kind: ClusterRoleBinding
  752  metadata:
  753    name: default-permit-app-viewer
  754  roleRef:
  755    apiGroup: rbac.authorization.k8s.io
  756    kind: ClusterRole
  757    name: app-viewer-cluster-access
  758  subjects:
  759    - kind: Group
  760      name: GROUP-FOR-APP-VIEWER
  761      apiGroup: rbac.authorization.k8s.io
  762  ---
  763  apiVersion: rbac.authorization.k8s.io/v1
  764  kind: RoleBinding
  765  metadata:
  766    name: dev-permit-app-editor
  767  roleRef:
  768    apiGroup: rbac.authorization.k8s.io
  769    kind: ClusterRole
  770    name: app-editor
  771  subjects:
  772    - kind: Group
  773      name: GROUP-FOR-APP-EDITOR
  774      apiGroup: rbac.authorization.k8s.io
  775  ---
  776  apiVersion: rbac.authorization.k8s.io/v1
  777  kind: ClusterRoleBinding
  778  metadata:
  779    name: default-permit-app-editor
  780  roleRef:
  781    apiGroup: rbac.authorization.k8s.io
  782    kind: ClusterRole
  783    name: app-editor-cluster-access
  784  subjects:
  785    - kind: Group
  786      name: GROUP-FOR-APP-EDITOR
  787      apiGroup: rbac.authorization.k8s.io
  788  EOF
  789  tanzu apps workload tail workload-name --since 10m --timestamp
  790  tanzu package available list -n tap-install api-portal.tanzu.vmware.com
  791  tanzu package installed list -n tap-install api-portal.tanzu.vmware.com
  792  tanzu package installed list -n tap-install |grep api
  793  tanzu package installed list -n tap-install |grep accelarator
  794  tanzu package installed list -n tap-install |grep accelerator
  795  alias k=kubectl
  796  k get secrets -A|grep git
  797  k get secrets -A|grep GUI
  798  k get secrets -A|grep TAP
  799  k get secrets -A
  800  tanzu package installed update tap -p tap.tanzu.vmware.com -v VERSION  --values-file tap3.yml -n tap-install
  801  export INSTALL_REGISTRY_HOSTNAME=demo.goharbor.io
  802  export INSTALL_REGISTRY_USERNAME="kmantha"
  803  export INSTALL_REGISTRY_PASSWORD="Harbor123!"
  804  export TAP_VERSION="1.1.0"
  805  tanzu package installed update tap -p tap.tanzu.vmware.com -v VERSION  --values-file tap3.yml -n tap-install
  806  tanzu package installed list -A
  807  tanzu package installed update tap -p tap.tanzu.vmware.com -v VERSION  --values-file tap3.yml -n tap-install
  808  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3.yml -n tap-install
  809  tanzu package installed list -A
  810  history
  811  tanzu package install tap -p tap.tanzu.vmware.com -v $TAP_VERSION --values-file tap3.yml -n tap-install
  812  tanzu package installed list -A
  813  tanzu package installed delete tap-gui -n tap-install
  814  tanzu package installed list -A
  815  tanzu package install tap -p tap.tanzu.vmware.com -v $TAP_VERSION --values-file tap3.yml -n tap-install
  816  tanzu package installed list -A
  817  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3.yml -n tap-install
  818  tanzu package available list -n tap-install |grep gui
  819  tanzu package installed get grype -n tap-install
  820  tanzu package available list -n tap-install |grep gui
  821  tanzu package install tap-gui -n tap-install -p tap-gui.tanzu.vmware.com -v 1.1.0
  822  tanzu package available list -n tap-install |grep gui
  823  tanzu package installed list -n tap-install |grep gui
  824  kubectl get pods -o=jsonpath="{.items[*]['metadata.name', 'metadata.namespace']}"
  825  gcloud container clusters get-credentials tap2 --zone us-east1-b
  826  kubectl get pods -o=jsonpath="{.items[*]['metadata.name', 'metadata.namespace']}"
  827  kubectl get pods -A
  828  kubectl get pods -o=jsonpath="{.items[*]['metadata.name', 'metadata.namespace']}"
  829  k
  830  reboot
  831  source < (kubectl completion bash | sed s/kubectl/k/g)
  832  source <(kubectl completion bash | sed s/kubectl/k/g)
  833  k get pods
  834  k 
  835  source < (kubectl completion bash)
  836  source <(kubectl completion bash)
  837  kubectl get pods
  838  kubectl get pods -A
  839  ls -la
  840  source <(kubectl completion bash | sed s/kubectl/k/g)
  841  vim .bashrc
  842  k
  843  apt-get install bash-completion
  844  sudo apt-get install bash-completion
  845  type _init_completion
  846  ls -l /usr/share/bash-completion/bash_completion
  847  source /usr/share/bash-completion/bash_completion
  848  vim .bashrc
  849  k
  850  k
  851  k get po
  852  ./.bashrc
  853  sudo ./.bashrc
  854  ls
  855  ls -la
  856  sudo ..bashrc
  857  sudo ./.bashrc
  858  sudo ./..bashrc
  859  kubectl get po
  860  gcloud container clusters get-credentials tap2 --zone us-east1-b
  861  k get po
  862  gcloud container clusters get-credentials tap2 --zone us-east1-b
  863  k get po
  864  k get po -A
  865  k describe pod tap-gui
  866  k describe pods -n tanzu-system-ingress 
  867  ls -latre
  868  ls -latr
  869  cat .bashrc
  870  k cluster-info
  871  k cluster-info|grep dash
  872  ps -ef|grep docker
  873  gcloud container clusters get-credentials tap2 --zone us-east1-b
  874  k get po -A
  875  kubectl get ns
  876  kubectl get sc -A
  877  kubectl get pv -A
  878  kubectl get workshop -A
  879  ls
  880  history > history.txt
  881  kubectl config view
  882  kubectl config view -o jsonpath='{.users[*].name}'
  883  ls
  884  ls -l
  885  ls -latr
  886  vim .bashrc
  887  k get po -A
  888  gcloud container clusters get-credentials tap2 --zone us-east1-b
  889  vim kcfg
  890  kubectl config --kubeconfig=config-demo set-cluster development --server=https://1.2.3.4 --certificate-authority=fake-ca-file
  891  kubectl config --kubeconfig=config-demo set-cluster scratch --server=https://5.6.7.8 --insecure-skip-tls-verify
  892  kubectl config --kubeconfig=config-demo set-credentials developer --client-certificate=fake-cert-file --client-key=fake-key-seefile
  893  k create ns mynamespace
  894  gcloud container clusters get-credentials tap2 --zone us-east1-b
  895  k run nginx --image nginx -ns mynamespace
  896  k run nginx --image=nginx --ns mynamespace
  897  k run nginx --image=nginx -ns mynamespace
  898  k run nginx --image=nginx -n mynamespace
  899  k run nginx --image=nginx -n mynamespace -o yaml --dry-run=client  >pod.yaml
  900  vim pod.yaml
  901  k apply -f pod.yaml
  902  k run busybox --image=busybox --restart=never -- env
  903  k run busybox --image=busybox --restart=Never -- env
  904  k logs busybox
  905  k run busybox --image=busybox --restart=Never -- env -o yaml > bb.yaml
  906  k run busybox --image=busybox --restart=Never -- env --o yaml > bb.yaml
  907  k run busybox --image=busybox --restart=Never -- env --o yaml --dry-run=client > bb.yaml
  908  k run busybox --image=busybox --restart=Never -- env -o yaml --dry-run=client > bb.yaml
  909  history
  910  k create po busybox --image=busybox --restart=Never -- env -o yaml --dry-run=client > bb.yaml
  911  k run busybox --image=busybox --restart=Never --dry-run=client --command -- env -o yaml > bb.yaml
  912  cat bb.yaml
  913  # create a  YAML template with this command
  914  kubectl run busybox --image=busybox --restart=Never --dry-run=client -o yaml --command -- env > envpod.yaml
  915  # see it
  916  cat envpod.yaml
  917  k run busybox --image=busybox --restart=Never --dry-run=client -o yaml --command -- env > bb.yaml
  918  cat b.yaml
  919  cat bb.yaml
  920  k delete po bysybox
  921  k delete po busybox
  922  k apply -f bb.yaml
  923  k logs busybox
  924  history
  925  k create ns myns --dry-run=client -o yaml 
  926  kubectl create quota myrq --hard=cpu=1,memory=1G,pods=2 --dry-run=client -o yaml
  927  kubectl create quota myrq --hard=cpu=1,memory=1G,pods=2 --dry-run=client -o yaml >rq.yaml
  928  k apply -f rq.yaml
  929  alias kaf='k apply -f'
  930  kaf rq.yaml
  931  k run nginx --image=nginx --expose --port=80
  932  k delete quota myrq
  933  k run nginx --image=nginx --expose --port=80
  934  k edit pod nginx --image=nginx:1.7
  935  k edit pod nginx 
  936  k get po
  937  k get po -wide
  938  k get po --wide
  939  k get po -o wide
  940  kubectl run busybox --image=busybox --rm -it --restart=Never -- wget -O- $(kubectl get pod nginx -o jsonpath='{.status.podIP}:{.spec.containers[0].ports[0].containerPort}')
  941  k delete po busybox
  942  kubectl run busybox --image=busybox --rm -it --restart=Never -- wget -O- $(kubectl get pod nginx -o jsonpath='{.status.podIP}:{.spec.containers[0].ports[0].containerPort}')
  943  k get pod nginx -o jsonpath ='{.status.podIP}:{spec.containers[0].ports[0].containerPort}
  944  '
  945  k get pod nginx -o jsonpath ='{.status.podIP}:{spec.containers[0].ports[0].containerPort}'
  946  k get pod nginx -o jsonpath ='{.status.podIP}:{.spec.containers[0].ports[0].containerPort}
  947  '
  948  kubectl create pod busybox --image=busybox --dry-run=client -o yaml -- /bin/sh -c 'echo hello; sleep 3600' >p.yaml
  949  kubectl run pod busybox --image=busybox --dry-run=client -o yaml -- /bin/sh -c 'echo hello; sleep 3600' >p.yaml
  950  vim p.yaml
  951  k apply -f p.yaml
  952  k get po
  953  k describe pod
  954  k log pod -c pod2
  955  k logs pod -c pod2
  956  kdescribe po pod
  957  k describe po pod
  958  k exec -it pod pod -c pod2 -- ls
  959  k describe pod nginx
  960  k logs nginx
  961  k logs nginx -p
  962  k exec nginx -it - /bin/sh
  963  k exec nginx -it -/bin/sh
  964  k exec -it nginx -- /bin/sh
  965  k exec -it nginx -- echo "hello world" --restart=Never --exit
  966  k exec -it nginx --restart=Never --rm  -- /bin/sh -c echo "hello world" 
  967  k exec -it  --restart=Never --rm  nginx -- /bin/sh -c echo "hello world" 
  968  k run bb3 --image=busybox -it  --restart=Never --rm  -- /bin/sh -c echo "hello world" 
  969  k run bb3 --image=busybox -it  --restart=Never --rm  -- /bin/sh -c 'echo hello world'
  970  k run bb3 --image=busybox --restart=Never --rm -- /bin/sh -c 'echo me2'
  971  k run bb3 --image=busybox exec -it  --restart=Never --rm  -- /bin/sh -c echo "hello world" 
  972  k run bb3 --image=busybox --exec -it  --restart=Never --rm  -- /bin/sh -c echo "hello world" 
  973  k run bb3 --image=busybox -exec -it  --restart=Never --rm  -- /bin/sh -c echo "hello world" 
  974  k run bb3 --image=busybox -it  --restart=Never --rm  -- /bin/sh -c 'echo hello world' 
  975  k get po -A
  976  k delete nginx
  977  k run nginx --image=nginx --restart=Never --env=var1=val1
  978  k delete pod nginx
  979  k run nginx --image=nginx --restart=Never --env=var1=val1
  980  k exec -it nginx -- /bin/sh env
  981  k exec -it nginx -- env
  982  k exec -it nginx -- echo $var1
  983  k exec -it nginx -- sh -c 'echo $var1'
  984  vim pod.yaml
  985  ls -l
  986  vim p.yaml
  987  wq
  988  k apply -f p.yaml
  989  k get po
  990  k delete pod pod
  991  k apply -f p.yaml
  992  k get pods
  993  gcloud container clusters get-credentials tap2 --zone us-east1-b
  994  k get pods
  995  history
  996  history|grep tanzu
  997  tanzu package installed list -n tap-install
  998  gcloud container clusters get-credentials tap2 --zone us-east1-b
  999  tanzu package installed list -n tap-install
 1000  history|grep status
 1001  history|grep grype
 1002  tanzu package installed get tap-auth -n tap-install
 1003  history
 1004  gcloud container clusters get-credentials tap2 --zone us-east1-b
 1005  tanzu package installed get tap-auth -n tap-install
 1006  history
 1007  ls
 1008  ls -l
 1009  cd tanzu
 1010  ls -ltr
 1011  cd ..
 1012  cat tap-values.yaml.save
 1013  cat tap-values.yaml.save|more
 1014  gcloud auth configure-docker \
 1015  cat .docker/config.json
 1016  cp .docker/config.json configjson.bkup
 1017  gcloud auth configure-docker \
 1018  clear
 1019  history|grep update
 1020  ls
 1021  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1022  docker login registry.tanzu.vmware.com -u "kmantha@vmware.com" -p "VMware123!"
 1023  history|grep docker login
 1024  history|grep login
 1025  gcloud artifacts locations list
 1026  docker-credential-gcr configure-docker --registries=northamerica-northeast1-docker.pkg.dev,asia-northeast1-docker.pkg.dev
 1027  curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${VERSION}/docker-credential-gcr_${OS}_${ARCH}-${VERSION}.tar.gz" \
 1028  | tar xz --to-stdout ./docker-credential-gcr \
 1029  > /usr/bin/docker-credential-gcr && chmod +x /usr/bin/docker-credential-gcr
 1030  curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${VERSION}/docker-credential-gcr_linux_amd64-2.1.3.tar.gz" | tar xz --to-stdout ./docker-credential-gcr > /usr/bin/docker-credential-gcr && chmod +x /usr/bin/docker-credential-gcr
 1031  history |grep login
 1032  docker login 
 1033  curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${VERSION}/docker-credential-gcr_linux_amd64-2.1.3.tar.gz" | tar xz --to-stdout ./docker-credential-gcr > /usr/bin/docker-credential-gcr && chmod +x /usr/bin/docker-credential-gcr
 1034  sudo curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${VERSION}/docker-credential-gcr_linux_amd64-2.1.3.tar.gz" | tar xz --to-stdout ./docker-credential-gcr > /usr/bin/docker-credential-gcr && chmod +x /usr/bin/docker-credential-gcr
 1035  sudo curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${VERSION}/docker-credential-gcr_linux_amd64-2.1.3.tar.gz" | tar xz --to-stdout ./docker-credential-gcr > /usr/bin/docker-credential-gcr && sudo chmod +x /usr/bin/docker-credential-gcr
 1036  sudo curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v2.1.3/docker-credential-gcr_linux_amd64-2.1.3.tar.gz" | tar xz --to-stdout ./docker-credential-gcr > /usr/bin/docker-credential-gcr && sudo chmod +x /usr/bin/docker-credential-gcr
 1037  clear
 1038  curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/docker-credential-gcr_linux_amd64-2.1.3.tar.gz" | tar xz --to-stdout ./docker-credential-gcr > /usr/bin/docker-credential-gcr && chmod +x /usr/bin/docker-credential-gcr
 1039  curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/docker-credential-gcr_linux_amd64-2.1.3.tar.gz" | sudo tar xz --to-stdout ./docker-credential-gcr > /usr/bin/docker-credential-gcr && sudo chmod +x /usr/bin/docker-credential-gcr
 1040  tar xz --to-stdout ./docker-credential-gcr > /usr/bin/docker-credential-gcr && chmod +x /usr/bin/docker-credential-gcr
 1041  ls
 1042  ls -l
 1043  sudo tar xz --to-stdout ./docker-credential-gcr > /usr/bin/docker-credential-gcr && sudo chmod +x /usr/bin/docker-credential-gcr
 1044  sudo tar xz --to-stdout ./docker-credential-gcr > /usr/bin/docker-credential-gcr
 1045  sudo tar xz --to-stdout ./docker-credential-gcr > docker-credential-gcr
 1046  unzip docker-credential-gcr_linux_amd64-2.1.3.tar.gz
 1047  sudo apt install unzip
 1048  unzip docker-credential-gcr_linux_amd64-2.1.3.tar.gz
 1049  tar -xvf docker-credential-gcr_linux_amd64-2.1.3.tar.gz
 1050  ls -l
 1051  cp docker-credential-gcr /usr/bin/docker-credential-gcr
 1052  sudo cp docker-credential-gcr /usr/bin/docker-credential-gcr
 1053  chmod 777 /usr/bin/docker-credential-gcr
 1054  sudo chmod 777 /usr/bin/docker-credential-gcr
 1055  history
 1056  docker-credential-gcr configure-docker --registries=northamerica-northeast1-docker.pkg.dev,asia-northeast1-docker.pkg.dev
 1057  history
 1058  docker login registry.tanzu.vmware.com -u "kmantha@vmware.com" -p "VMware123!"
 1059  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1060  export INSTALL_REGISTRY_HOSTNAME="registry.tanzu.vmware.com"
 1061  export INSTALL_REGISTRY_USERNAME="kmantha@vmware.com"
 1062  export INSTALL_REGISTRY_PASSWORD="VMware123!"
 1063  export TAP_VERSION="1.1.0"
 1064  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1065  export INSTALL_REGISTRY_HOSTNAME="registry.tanzu.vmware.com"
 1066  export INSTALL_REGISTRY_PASSWORD="VMware123!"
 1067  export TAP_VERSION="1.1.0"
 1068  export INSTALL_REGISTRY_USERNAME="kmantha@vmware.com"
 1069  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1070  tanzu package installed list -A
 1071  tanzu package installed get tap -n tap-install
 1072  k get packageInstall/secretgen-controller -oyaml -n tanzu-kap
 1073  kapp -h
 1074  kapp -v
 1075  history
 1076  k get packageInstall/secretgen-controller -oyaml -n tanzu-kap
 1077  ls -ltr
 1078  sudo docker login registry.tanzu.vmware.com -u "kmantha@vmware.com" -p "VMware123!"
 1079  gcloud auth configure-docker \
 1080  history|grep gcloud
 1081  gcloud containers image list northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap
 1082  gcloud container image list northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap
 1083  gcloud container images list northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap
 1084  gcloud container images list ktap
 1085  gcloud container images --help
 1086  gcloud container images list
 1087  gcloud container images list --repository ktap
 1088  gcloud container images list --repository --help
 1089  gcloud container images list --help
 1090  history
 1091  gcloud container images list --repository=northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap
 1092  export TAP_VERSION="1.1.0"
 1093  imgpkg copy -b registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:${TAP_VERSION} --to-repo northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap/tap-packages
 1094  docker-credential-gcr configure-docker
 1095  cat ~/.docker/config.json
 1096  gcloud container images list --repository=northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap
 1097  history
 1098  imgpkg copy -b registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:${TAP_VERSION} --to-repo northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap/tap-packages
 1099  gcloud auth configure-docker northamerica-northeast1-docker.pkg.dev
 1100  imgpkg copy -b registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:${TAP_VERSION} --to-repo northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap/tap-packages
 1101  export northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap
 1102  clear
 1103  history
 1104  export northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap
 1105  clear
 1106  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1107  ls
 1108  env
 1109  imgpkg copy -b registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:${TAP_VERSION} --to-repo northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap/tap-packages
 1110  history |grep export
 1111  history |grep export|grep gcr
 1112  history |grep export
 1113  export INSTALL_REGISTRY_HOSTNAME="https://northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1114  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1115  history
 1116  gcloud container images list --repository=northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap
 1117  gcloud auth configure-docker northamerica-northeast1-docker.pkg.dev
 1118  docker-credential-gcr configure-docker --registries=northamerica-northeast1-docker.pkg.dev,asia-northeast1-docker.pkg.dev
 1119  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1120  export INSTALL_REGISTRY_HOSTNAME="https://northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1121  history |grep contour
 1122  history |grep delete
 1123  history |grep grype
 1124  history |grep ingress
 1125  history 620 650
 1126  history 620-650
 1127  history |grep add
 1128  history |grep GUI
 1129  history |grep gui
 1130  history
 1131  history |grep gcloud
 1132  history |grep login
 1133  history |grep api
 1134  history |grep ionit
 1135  history |grep init
 1136  gcloud init
 1137  history
 1138  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1139  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap-del.yml -n tap-install
 1140  ls
 1141  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap-del.yaml -n tap-install
 1142  export INSTALL_REGISTRY_HOSTNAME="https://northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1143  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap-del.yaml -n tap-install
 1144  tanzu package installed help
 1145  tanzu package installed --help
 1146  tanzu package installed list
 1147  $ tanzu package repository list --namespace tap-install
 1148  - Retrieving repositories...
 1149  $ tanzu package repository list --namespace tap-install
 1150  tanzu package repository list --namespace tap-install
 1151  tanzu package repository delete tanzu-tap-repository --namespace tap-install
 1152  ls
 1153  history|grep secret
 1154  export INSTALL_REGISTRY_HOSTNAME="https://northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1155  export INSTALL_REGISTRY_USERNAME="_json_key"
 1156  export INSTALL_REGISTRY_PASSWORD="./sa-tap.json"
 1157  export TAP_VERSION="1.1.0"
 1158  history |grep login
 1159  docker login registry.tanzu.vmware.com  -u kmantha@vmware.com -p VMware123!
 1160  history|grep gcr
 1161  history|grep imgpkg
 1162  history|grep gcr
 1163  history|grep secret
 1164  history
 1165  history|grep gcr
 1166  history |grep sa
 1167  env
 1168  kubectl get ns
 1169  wget https://github.com/derailed/k9s/releases/download/v0.25.18/k9s_Linux_x86_64.tar.gz
 1170  ls
 1171  ls -l
 1172  tar -xvf k9s_Linux_x86_64.tar.gz
 1173  ls
 1174  cat READ*
 1175  ls
 1176  sudo cp k9s /usr/local/bin/k9s
 1177  k9s
 1178  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1179  kubectl create ns tap-install
 1180  tanzu secret registry add registry-credentials  --server ${INSTALL_REGISTRY_HOSTNAME}  --username ${INSTALL_REGISTRY_USERNAME} --password-file ${INSTALL_REGISTRY_PASSWORD}  --namespace $NAMESPACE
 1181  env |grep INSTALL
 1182  export INSTALL_REGISTRY_HOSTNAME="https://northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1183  export INSTALL_REGISTRY_USERNAME="_json_key"
 1184  export INSTALL_REGISTRY_PASSWORD="./sa-tap.json"
 1185  export TAP_VERSION="1.1.0"
 1186  tanzu secret registry add registry-credentials  --server ${INSTALL_REGISTRY_HOSTNAME}  --username ${INSTALL_REGISTRY_USERNAME} --password-file ${INSTALL_REGISTRY_PASSWORD}  --namespace $NAMESPACE
 1187  tanzu secret registry add registry-credentials  --server ${INSTALL_REGISTRY_HOSTNAME}  --username ${INSTALL_REGISTRY_USERNAME} --password-file ${INSTALL_REGISTRY_PASSWORD}  --namespace tap-install
 1188  tanzu package repository add tanzu-tap-repository --url ${INSTALL_REGISTRY_HOSTNAME}/ktap/tap-packages:$TAP_VERSION  --namespace tap-install
 1189  export INSTALL_REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1190  tanzu package repository add tanzu-tap-repository --url ${INSTALL_REGISTRY_HOSTNAME}/ktap/tap-packages:$TAP_VERSION  --namespace tap-install
 1191  export INSTALL_REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp"
 1192  tanzu package repository add tanzu-tap-repository --url ${INSTALL_REGISTRY_HOSTNAME}/ktap/tap-packages:$TAP_VERSION  --namespace tap-install
 1193  tanzu package repository get tanzu-tap-repository --namespace tap-install
 1194  tanzu package available list --namespace tap-install
 1195  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1196  kubectl delete ns tap-install
 1197  tanzu package repository get tanzu-tap-repository --namespace tap-install
 1198  kubectl delete ns tap-install
 1199  tanzu secret registry add registry-credentials  --server ${INSTALL_REGISTRY_HOSTNAME}  --username ${INSTALL_REGISTRY_USERNAME} --password-file ${INSTALL_REGISTRY_PASSWORD}  --namespace tap-install
 1200  kubectl get ns tap-install
 1201  kubectl delete ns tap-install
 1202  kubectl get ns
 1203  kubectl get ns tap-install
 1204  k9s
 1205  kubectl get ns
 1206  gcloud init
 1207  gclud cheat-sheet
 1208  gcloud cheat-sheet
 1209  tanzu package available list --namespace tap-install
 1210  kubectl delete ns tap-install
 1211  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1212  tanzu package update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1213  k9s
 1214  gcloud container clusters get-credentials taper --zone us-east1-b --project api-gw-on-gc
 1215  gcloud init
 1216  k config current-context
 1217  kubectl config get-contexts
 1218  gcloud container clusters get-credentials taper --zone us-east1-b --project api-gw-on-gcp
 1219  kubectl config get-contexts
 1220  k9s
 1221  tanzu version
 1222  docker login registry.tanzu.vmware.com  -u kmantha@vmware.com -p VMware123!
 1223  export INSTALL_REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp"
 1224  export INSTALL_REGISTRY_USERNAME="_json_key"
 1225  export INSTALL_REGISTRY_PASSWORD_FILE="./sa-tap.json"
 1226  export TAP_VERSION="1.1.0"
 1227  tanzu secret registry add registry-credentials  --server ${INSTALL_REGISTRY_HOSTNAME}  --username ${INSTALL_REGISTRY_USERNAME} --password-file ${INSTALL_REGISTRY_PASSWORD_FILE}  --namespace tap-install
 1228  kubectl get ns
 1229  kapp
 1230  tanzu package available list --namespace tap-install
 1231  tanzu secret registry add registry-credentials  --server ${INSTALL_REGISTRY_HOSTNAME}  --username ${INSTALL_REGISTRY_USERNAME} --password-file ${INSTALL_REGISTRY_PASSWORD_FILE}  --namespace tap-install
 1232  kubectl create namespace kapp-controller
 1233  export INSTALL_BUNDLE=registry.tanzu.vmware.com/tanzu-cluster-essentials/cluster-essentials-bundle@sha256:82dfaf70656b54dcba0d4def85ccae1578ff27054e7533d08320244af7fb0343
 1234  history |grep export
 1235  history |grep export|more
 1236  export INSTALL_REGISTRY_HOSTNAME=registry.tanzu.vmware.com
 1237  export INSTALL_REGISTRY_USERNAME="kmantha@vmware.com"
 1238  export INSTALL_REGISTRY_PASSWORD="VMware123!"
 1239  export INSTALL_REGISTRY_HOSTNAME=registry.tanzu.vmware.com
 1240  cd $HOME/tanzu-cluster-essentials
 1241  ca install.sh
 1242  cat install.sh
 1243  ./install.sh
 1244  history |grep gcr
 1245  clear
 1246  cat ./sa-tap.json | docker login -u _json_key --password-stdin https://gcr.io
 1247  cd ..
 1248  cat ./sa-tap.json | docker login -u _json_key --password-stdin https://gcr.io
 1249  docker login registry.tanzu.vmware.com  -u kmantha@vmware.com -p VMware123!
 1250  env|grep INSTALL
 1251  tanzu secret registry add registry-credentials  --server ${INSTALL_REGISTRY_HOSTNAME}  --username ${INSTALL_REGISTRY_USERNAME} --password-file ${INSTALL_REGISTRY_PASSWORD_FILE}  --namespace tap-install
 1252  kubectl create namespace tap-install
 1253  tanzu secret registry add registry-credentials  --server ${INSTALL_REGISTRY_HOSTNAME}  --username ${INSTALL_REGISTRY_USERNAME} --password-file ${INSTALL_REGISTRY_PASSWORD_FILE}  --namespace tap-install
 1254  tanzu package repository add tanzu-tap-repository --url ${INSTALL_REGISTRY_HOSTNAME}/ktap/tap-packages:$TAP_VERSION  --namespace tap-install
 1255  env
 1256  export INSTALL_REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1257  export INSTALL_REGISTRY_HOSTNAME="https://northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1258  export INSTALL_REGISTRY_USERNAME="_json_key"
 1259  export INSTALL_REGISTRY_PASSWORD_FILE="./sa-tap.json"
 1260  tanzu package repository add tanzu-tap-repository --url ${INSTALL_REGISTRY_HOSTNAME}/ktap/tap-packages:$TAP_VERSION  --namespace tap-install
 1261  export INSTALL_REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/"
 1262  tanzu package repository add tanzu-tap-repository --url ${INSTALL_REGISTRY_HOSTNAME}/ktap/tap-packages:$TAP_VERSION  --namespace tap-install
 1263  export INSTALL_REGISTRY_HOSTNAME=registry.tanzu.vmware.com
 1264  export INSTALL_REGISTRY_USERNAME="kmantha@vmware.com"
 1265  export INSTALL_REGISTRY_PASSWORD="VMware123!"
 1266  tanzu package repository add tanzu-tap-repository --url ${INSTALL_REGISTRY_HOSTNAME}/ktap/tap-packages:$TAP_VERSION  --namespace tap-install
 1267  export INSTALL_REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1268  export INSTALL_REGISTRY_USERNAME="_json_key"
 1269  export INSTALL_REGISTRY_PASSWORD_FILE="./sa-tap.json"
 1270  tanzu package repository add tanzu-tap-repository --url ${INSTALL_REGISTRY_HOSTNAME}/tap-packages:$TAP_VERSION  --namespace tap-install
 1271  export INSTALL_REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1272  export INSTALL_REGISTRY_USERNAME="_json_key"
 1273  history 20
 1274  history 60
 1275  tanzu package available list --namespace tap-install
 1276  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1277  tanzu package installed get buildservice -n tap-install
 1278  gcloud auth configure-docker \
 1279  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1280  tanzu package installed get buildservice -n tap-install
 1281  ls
 1282  vim gcloud auth configure-docker \
 1283  ls
 1284  clear
 1285  vim *3b*
 1286  ls -ltr
 1287  tanzu package installed get buildservice -n tap-install
 1288  tanzu package installed delete buildservice -n tap-install
 1289  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1290  tanzu package installed get buildservice -n tap-install
 1291  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1292  tanzu package installed delete buildservice -n tap-install
 1293  tanzu package installed list -A
 1294  tanzu package available list -A
 1295  tanzu package available list -A|grep build
 1296  tap package install --help
 1297  tanzu package install --help
 1298  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1299  tanzu package installed get buildservice -n tap-install
 1300  vim *3b*
 1301  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1302  tanzu package install buildservice -p buildservice.tanzu.vmware.com -v $TAP_VERSION --values-file tap3.yml -n tap-install
 1303  tanzu package install buildservice -p buildservice.tanzu.vmware.com -v 1.5.0 --values-file tap3.yml -n tap-install
 1304  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1305  tanzu package update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1306  tanzu package --help
 1307  tanzu package install update tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1308  tanzu package install --help
 1309  tanzu package install buildservice -p buildservice.tanzu.vmware.com -v 1.5.0 -n tap-install
 1310  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1311  vim *3b*
 1312  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1313  ls -ltr
 1314  vim *3b*
 1315  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1316  tanzu package install buildservice -p buildservice.tanzu.vmware.com -v 1.5.0 -n tap-install
 1317  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1318  k9s
 1319  tanzu package installed get tap -n tap-install
 1320  tanzu package installed get -A -n tap-install
 1321  tanzu package installed list -n tap-install
 1322  kubectl get ingress
 1323  kubectl get ingress -A
 1324  kubectl get svc -n tap-install
 1325  kubectl get svc
 1326  kubectl get po
 1327  kubectl get ns
 1328  kubectl get svc -n tap-gui
 1329  kubectl get svc -n tanzu-system-ingress
 1330  tanzu -version
 1331  tanzu version
 1332  tanzu plugin list
 1333  kubectl create ns dev1
 1334  gcloud login
 1335  gcloud auth login
 1336  kubectl create ns dev1
 1337  tanzu secret registry add registry-credentials --server REGISTRY_SERVER --username REGISTRY_USERNAME --password REGISTRY_PASSWORD_FILE --namespace dev1
 1338  ls
 1339  pwd
 1340  export REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1341  export REGISTRY_USERNAME="_json_key"
 1342  export REGISTRY_PASSWORD_FILE="./sa-tap.json"
 1343  tanzu secret registry add registry-credentials --server REGISTRY_SERVER --username REGISTRY_USERNAME --password REGISTRY_PASSWORD_FILE --namespace dev1
 1344  wget https://network.tanzu.vmware.com/api/v2/products/tap-auth/releases/1077881/product_files/1192815/download
 1345  docker login registry.tanzu.vmware.com  -u kmantha@vmware.com -p VMware123!
 1346  wget https://network.tanzu.vmware.com/api/v2/products/tap-auth/releases/1077881/product_files/1192815/download
 1347  docker login registry.tanzu.vmware.com  -u kmantha@vmware.com -p VMware123!
 1348  wget https://network.tanzu.vmware.com/api/v2/products/tap-auth/releases/1077881/product_files/1192815/download
 1349  ll
 1350  ls -ltr
 1351  tar -zxvf tap-auth-plugin_1.0.1-beta.1.tar.gz
 1352  ll
 1353  tanzu plugin install rbac --local linux-amd64
 1354  ls -ltr
 1355  k apply -f TAP_DS_secret.yaml
 1356  tanzu rbac binding add -g GROUP-FOR-APP-VIEWER -n YOUR-NAMESPACE -r app-viewer
 1357  tanzu rbac binding add -g GROUP-FOR-APP-EDITOR -n YOUR-NAMESPACE -r app-editor
 1358  tanzu rbac binding add -g GROUP-FOR-APP-VIEWER -n dev1 -r app-viewer
 1359  tanzu rbac binding add -g GROUP-FOR-APP-EDITOR -n dev1 -r app-editor
 1360  k apply -f dev_rbac.yaml
 1361  k9s
 1362  tanzu package available
 1363  tanzu package available list
 1364  tanzu package installed list --namespace tap-install
 1365  tanzu package available list
 1366  tanzu apps workload create tanzu-java-web-app--git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace YOUR-DEVELOPER-NAMESPACE
 1367  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace YOUR-DEVELOPER-NAMESPACE
 1368  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1369  tanzu apps workload tail tanzu-java-web-app --since 10m --timestamp --namespace dev1
 1370  tanzu apps workload tail tanzu-java-web-app --namespace dev1
 1371  tanzu get workloads
 1372  tanzu workloads list
 1373  tanu app workload --list
 1374  tanzu app workload --list
 1375  tanzu app workload list
 1376  tanzu apps workload tail tanzu-java-web-app --namespace dev1
 1377  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1378  tanzu app workload list
 1379  tanzu apps workload list
 1380  kubectl describe gitrepository
 1381  kubectl describe gitrepository -A
 1382  kubectl get gitrepository -A
 1383  kubectl describe git-repository -n accelerator-system
 1384  kubectl describe gitrepository tanzu-java-web-app-acc-snb -n accelerator-system
 1385  tanzu apps workload delete tanzu-java-web-app --namespace dev1
 1386  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1387  kubectl get gitrepository -A
 1388  tanzu apps workload tail tanzu-java-web-app --namespace dev1
 1389  tanzu apps workload delete tanzu-java-web-app --namespace dev1
 1390  tanzu package installed delete ootb-supply-chain-testing-scanning --namespace tap-install
 1391  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1392  tanzu apps workload tail tanzu-java-web-app --namespace dev1
 1393  tanzu apps workload list
 1394  tanzu apps workload create --help
 1395  tanzu apps workload delete tanzu-java-web-app --namespace dev1
 1396  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --tail --namespace dev1 -v 9
 1397  tanzu package installed delete ootb-supply-chain-testing-scanning --namespace tap-install
 1398  tanzu package installed delete ootb-supply-basic --namespace tap-install
 1399  tanzu package available list
 1400  tanzu package available list -A
 1401  tanzu package available list -A|grep basic
 1402  vim *3b*
 1403  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1404  vim *3b*
 1405  cat *3b*
 1406  history|grep export
 1407  export INSTALL_REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1408  export INSTALL_REGISTRY_HOSTNAME="https://northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1409  export INSTALL_REGISTRY_USERNAME="_json_key"
 1410  export INSTALL_REGISTRY_PASSWORD_FILE="./sa-tap.json"
 1411  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1412  vim *3b*
 1413  ls -ltr
 1414  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1415  cat *3b*
 1416  cat *3b*|more
 1417  cat ./sa-tap.json | docker login -u _json_key --password-stdin https://gcr.io
 1418  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1419  cat *3b*|more
 1420  docker-credential-gcr configure-docker --registries=northamerica-northeast1-docker.pkg.dev,asia-northeast1-docker.pkg.dev
 1421  pwd
 1422  history |grep gcr
 1423  history |grep secret
 1424  tanzu secret registry add registry-credentials --server $REGISTRY_SERVER --username $REGISTRY_USERNAME --password $REGISTRY_PASSWORD_FILE --namespace dev1
 1425  tanzu delete secret registry -n dev1
 1426  tanzu secret delete registry -n dev1
 1427  tanzu secret --help
 1428  tanzu secret registry --help
 1429  tanzu secret registry delete -n dev1
 1430  tanzu secret registry list
 1431  tanzu secret registry delete tap-registry 
 1432  export REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1433  export REGISTRY_USERNAME="_json_key"
 1434  export REGISTRY_PASSWORD_FILE="./sa-tap.json"
 1435  tanzu secret registry add registry-credentials --server $REGISTRY_SERVER --username $REGISTRY_USERNAME --password $REGISTRY_PASSWORD_FILE --namespace dev1
 1436  tanzu secret registry add registry-credentials --server $REGISTRY_HOSTNAME --username $REGISTRY_USERNAME --password $REGISTRY_PASSWORD_FILE --namespace dev1
 1437  echo $REGISTRY_HOSTNAME
 1438  export REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev"
 1439  tanzu secret registry add registry-credentials --server ${REGISTRY_HOSTNAME} --username ${REGISTRY_USERNAME} --password ${REGISTRY_PASSWORD_FILE} --namespace dev1
 1440  uname -a
 1441  clear
 1442  tanzu secret registry delete tap-registry 
 1443  tanzu secret registry get  -n dev1
 1444  tanzu secret registry delete tap-registry -n dev1
 1445  tanzu secret registry add registry-credentials --server "${REGISTRY_HOSTNAME}" --username "${REGISTRY_USERNAME}" --password "${REGISTRY_PASSWORD_FILE}" --namespace dev1
 1446  tanzu secret registry delete registry-credentials -n dev1
 1447  tanzu secret registry add registry-credentials --server "${REGISTRY_HOSTNAME}" --username "${REGISTRY_USERNAME}" --password "${REGISTRY_PASSWORD_FILE}" --namespace dev1
 1448  clear
 1449  kp
 1450  tanzu secret registry add registry-credentials --server REGISTRY_SERVER --username REGISTRY_USERNAME --password REGISTRY_PASSWORD_FILE --namespace dev1
 1451  tanzu secret registry delete registry-credentials -n dev1
 1452  kubectl create secret docker-registry registry-credentials \
 1453  kubectl create secret docker-registry registry-credentials --docker-server “https://gcr.io”  --docker-username _json_key  --docker-email kmantha@vmware.com  --docker-password=$(cat ./sa-tap.json)
 1454  kubectl create secret docker-registry -h
 1455  kubectl create secret docker-registry -h|more
 1456  history |grep docker
 1457  kubectl -v
 1458  kubectl --v
 1459  kubectl --version
 1460  kubectl --v
 1461  kubectl -v
 1462  kubectl version
 1463  clear
 1464  history
 1465  kubectl create secret docker-registry registry-credentials --docker-server gcr.io  --docker-username _json_key  --docker-email "kmantha@vmware.com"  --docker-password=$(cat ./sa-tap.json)
 1466  kubectl create secret registry-credentials --docker-server gcr.io  --docker-username _json_key  --docker-email "kmantha@vmware.com"  --docker-password=$(cat ./sa-tap.json) -n dev1
 1467  kubectl create secret registry registry-credentials --docker-server gcr.io  --docker-username _json_key  --docker-email "kmantha@vmware.com"  --docker-password=$(cat ./sa-tap.json) -n dev1
 1468  kubectl create secret registry-credentials --docker-server=gcr.io  --docker-username=_json_key  --docker-email="kmantha@vmware.com"  --docker-password=$(cat ./sa-tap.json) -n dev1
 1469  kubectl create secret docker-registry registry-credentials --docker-server=gcr.io  --docker-username=_json_key  --docker-email="kmantha@vmware.com"  --docker-password=$(cat ./sa-tap.json) -n dev1
 1470  kubectl create secret registry-credentials --docker-server="gcr.io"  --docker-username="_json_key"  --docker-email="kmantha@vmware.com"  --docker-password=$(cat ./sa-tap.json) -n dev1
 1471  kubectl create secret docker-registryregistry-credentials --docker-server="gcr.io"  --docker-username="_json_key"  --docker-email="kmantha@vmware.com"  --docker-password=$(cat ./sa-tap.json) -n dev1
 1472  kubectl create secret docker-registry registry-credentials --docker-server="gcr.io"  --docker-username="_json_key"  --docker-email="kmantha@vmware.com"  --docker-password=$(cat ./sa-tap.json) -n dev1
 1473  kubectl create secret docker-registry -h
 1474  kubectl create secret docker-registry -h |more
 1475  ls  -l *json
 1476  pwd
 1477  kubectl -n dev1 create secret docker-registry registry-credentials-gcr  --docker-server “gcr.io”  --docker-username “_json_key”  --docker-password “$(cat /home/azureuser/sa_tap.json)”
 1478  tanzu secret registry delete registry-credentials -n dev1
 1479  kubectl -n dev1 create secret docker-registry registry-credentials-gcr  --docker-server gcr.io  --docker-username _json_key  --docker-password $(cat /home/azureuser/sa_tap.json)
 1480  kubectl -n dev1 create secret docker-registry registry-credentials-gcr  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa_tap.json)"
 1481  clear
 1482  kubectl -n dev1 create secret docker-registry registry-credentials-gcr  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa_tap.json)"
 1483  pwd
 1484  ls -l
 1485  kubectl -n dev1 create secret docker-registry registry-credentials-gcr  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)"
 1486  clear
 1487  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)"
 1488  tanzu secret registry delete registry-credentials 
 1489  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)"
 1490  kubectl create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)"
 1491  clear
 1492  kubectl create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)"
 1493  kubectl create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n tap-install
 1494  history 80
 1495  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1496  vim *3b*
 1497  kubectl create secret docker-registry registry-credentials  --docker-server "https://"northamerica-northeast1-docker.pkg.dev"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n tap-install
 1498  kubectl create secret docker-registry registry-credentials  --docker-server "https://northamerica-northeast1-docker.pkg.dev"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n tap-install
 1499  kubectl create secret docker-registry registry-credentials  --docker-server "https://northamerica-northeast1-docker.pkg.dev"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1500  kubectl create secret docker-registry registry-credentials  --docker-server "https://northamerica-northeast1-docker.pkg.dev"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n dev1
 1501  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1502  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n dev1
 1503  k9s
 1504  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install -v 9
 1505  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install -h
 1506  history 200
 1507  history 200|more
 1508  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-insta
 1509  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install -v 9
 1510  history|grep ootb
 1511  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install 
 1512  tanzu package get  ootb-supply-chain-basic 
 1513  tanzu package installed get  ootb-supply-chain-basic -n tap-install
 1514  kubectl -n dev1 create secret docker-registry registry-credentials-gcr  --docker-server https://northamerica-northeast1-docker.pkg.dev  --docker-username _json_key  --docker-password $(cat /home/azureuser/sa_tap.json)
 1515  kubectl -n dev1 create secret docker-registry registry-credentials-gcr  --docker-server https://northamerica-northeast1-docker.pkg.dev  --docker-username _json_key  --docker-password $(cat /home/azureuser/sa-tap.json)
 1516  k9s
 1517  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "https://northamerica-northeast1-docker.pkg.dev"  --docker-username "_json_key"  --docker-password $(cat /home/azureuser/sa-tap.json)
 1518  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n dev1
 1519  tanzu secret registry delete registry-credentials -n dev1
 1520  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server ""https://northamerica-northeast1-docker.pkg.dev"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n dev1
 1521  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "https://northamerica-northeast1-docker.pkg.dev"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n dev1
 1522  history
 1523  history|grep north
 1524  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "https://northamerica-northeast1-docker.pkg.dev"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n tap-install
 1525  tanzu package installed get  ootb-supply-chain-basic -n tap-install
 1526  history|grep basic
 1527  tanzu package installed delete ootb-supply-basic --namespace tap-install
 1528  vim *3b*
 1529  k9s
 1530  vim *3b*
 1531  history
 1532  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1533  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "https://northamerica-northeast1-docker.pkg.dev/"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n tap-install
 1534  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1535  tanzu package installed get  ootb-supply-chain-basic -n tap-install
 1536  gcloud auth configure-docker \
 1537  vim *3b*
 1538  k9s
 1539  tanzu package installed get  ootb-supply-chain-basic -n tap-install
 1540  history
 1541  clear
 1542  vim *3b*
 1543  tanzu package installed get  ootb-supply-chain-basic -n tap-install
 1544  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1545  vim *3b*
 1546  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1547  vim *3b*
 1548  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1549  vim *3b*
 1550  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1551  tanzu secret registry delete registry-credentials -n dev1
 1552  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n dev1
 1553  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1554  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1555  vim *3b*
 1556  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1557  tanzu package installed delete ootb-supply-basic --namespace tap-install
 1558  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1559  ll
 1560  ls *.yml
 1561  ls *.y*
 1562  ls -l *.y*
 1563  cd tan*
 1564  cd tanzu-cluster-essentials
 1565  ls 
 1566  cd ..
 1567  cat tap-values.yaml.save
 1568  tanzu package installed delete ootb-supply-basic --namespace tap-install
 1569  tanzu secret registry delete registry-credentials -n dev1
 1570  tanzu secret registry delete registry-credentials
 1571  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "https://northamerica-northeast1-docker.pkg.dev/"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n tap-install
 1572  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "https://northamerica-northeast1-docker.pkg.dev/"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1573  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1574  vim *3b*
 1575  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1576  vim *3b*
 1577  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1578  vim *3b*
 1579  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1580  vim *3b*
 1581  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1582  history |grep asia
 1583  kubectl describe packagerepositories.packaging.carvel.dev -n tap-install
 1584  kubectl get packageinstalls -n tap-install
 1585  kubectl get all -n accelerator-system
 1586  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1587  tanzu secret registry delete registry-credentials
 1588  tanzu secret registry delete registry-credentials -n dev1
 1589  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1590  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" -n dev1
 1591  kubectl apply -n dev1 -f dev-ns.yaml
 1592  ls -ltr
 1593  kubectl apply -n dev1 -f workload-ns.yaml
 1594  kubectl apply -n dev1 -f workload-ns-setup.yaml
 1595  tanzu apps workload create -f ./config/workload.yaml
 1596  tanzu apps workload create -f ./workload.yaml
 1597  tanzu apps workload get tanzu-java-web-app
 1598  tanzu apps workload create -f ./workload.yaml -n dev1
 1599  tanzu apps workload list -n dev1
 1600  tanzu apps workload delete tanzu-java-web-app -n dev1
 1601  tanzu apps workload create -f ./workload.yaml -n dev1
 1602  tanzu apps workload get tanzu-java-web-app -n dev1
 1603  tanzu apps workload tail tanzu-java-web-app --since 1h -n dev1
 1604  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1605  tanzu secret registry delete registry-credentials 
 1606  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1607  kubectl -n tap-install create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1608  tanzu secret registry delete registry-credentials -n tap-install
 1609  kubectl -n tap-install create secret docker-registry registry-credentials  --docker-server "gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1610  tanzu apps workload tail tanzu-java-web-app --since 1h -n dev1
 1611  history 50
 1612  ls -la
 1613  cd .docker
 1614  ls -la
 1615  
 1616  k9s
 1617  tanzu apps workload tail tanzu-java-web-app --since 1h -n dev1
 1618  tanzu apps workload delete tanzu-java-web-app -n dev1
 1619  kubectl apply -n dev1 -f workload-ns-setup.yaml
 1620  export INSTALL_REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1621  export INSTALL_REGISTRY_USERNAME="_json_key"
 1622  export INSTALL_REGISTRY_PASSWORD_FILE="./sa-tap.json"
 1623  tanzu apps workload delete tanzu-java-web-app -
 1624* 
 1625  tanzu secret registry delete registry-credentials -n dev1
 1626  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "https://northamerica-northeast1-docker.pkg.dev/"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1627  kubectl -n tap-install create secret docker-registry registry-credentials  --docker-server "https://northamerica-northeast1-docker.pkg.dev/"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1628  tanzu apps workload create -f ./workload.yaml -n dev1
 1629  tanzu apps workload tail tanzu-java-web-app --since 1h -n dev1
 1630  gcloud auth configure-docker \
 1631  tanzu secret registry delete registry-credentials -n dev1
 1632  tanzu secret registry delete registry-credentials 
 1633  tanzu apps workload tail tanzu-java-web-app --since 1h -n dev1
 1634  kubectl -n tap-install create secret docker-registry registry-credentials  --docker-server "asia.gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1635  tanzu secret registry delete registry-credentials -n tap-install
 1636  tanzu package installed delete ootb-supply-basic --namespace tap-install
 1637  vim *3b*
 1638  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1639  kubectl get secrets
 1640  history 50
 1641  kubectl -n tap-install create secret docker-registry registry-credentials  --docker-server "asia.gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1642  kubectl -n dev1 create secret docker-registry registry-credentials  --docker-server "asia.gcr.io"  --docker-username "_json_key"  --docker-password "$(cat /home/azureuser/sa-tap.json)" 
 1643  tanzu package install  ootb-supply-chain-basic -p ootb-supply-chain-basic.tanzu.vmware.com -v 0.7.0 --values-file tap3b.yml -n tap-install
 1644  docker pull asia.gcr.io/api-gw-on-gcp/build-service:latest
 1645  gcloud auth login
 1646  docker pull asia.gcr.io/api-gw-on-gcp/build-service:latest
 1647  history 200000
 1648  history 200000 > history.txt
