 1535  ./install.sh --yes
 1536  vim install.sh
 1537  k get ns
 1538  ./rmns.sh kapp-controller
 1539  k get ns
 1540  ./rmns.sh kapp-controller
 1541  k delete ns kapp-controller
 1542  k get ns
 1543  ./rmns.sh kapp-controller
 1544  k get ns
 1545  ./install.sh --yes
 1546  vim install.sh
 1547  ./install.sh --yes
 1548  export INSTALL_BUNDLE=registry.tanzu.vmware.com/tanzu-cluster-essentials/cluster-essentials-bundle@sha256:ab0a3539da241a6ea59c75c0743e9058511d7c56312ea3906178ec0f3491f51d
 1549  ./install.sh --yes
 1550  kubectl get packageinstall tap -o=jsonpath={.status.usefulErrorMessage} -n kapp-controller
 1551  cat install.sh
 1552  env|grep INSTALL
 1553  ./uninstall.sh 
 1554  ls
 1555  cd ..
 1556  ls -ltr
 1557  wget https://network.tanzu.vmware.com/api/v2/products/tanzu-cluster-essentials/releases/1077299/product_files/1191987/download
 1558  docker login registry.tanzu.vmware.com  -u kmantha@vmware.com -p VMware123!
 1559  wget https://network.tanzu.vmware.com/api/v2/products/tanzu-cluster-essentials/releases/1077299/product_files/1191987/download
 1560  tanzu login
 1561  tanzu --help
 1562  tanzu init
 1563  wget https://network.tanzu.vmware.com/api/v2/products/tanzu-cluster-essentials/releases/1077299/product_files/1191987/download
 1564  wget -d --user=kmantha --pass=VMware123 https://network.tanzu.vmware.com/api/v2/products/tanzu-cluster-essentials/releases/1077299/product_files/1191987/download
 1565  wget -d --user=kmantha --password=VMware123 https://network.tanzu.vmware.com/api/v2/products/tanzu-cluster-essentials/releases/1077299/product_files/1191987/download
 1566  history
 1567  kubectl get ns kapp-controller -o json | jq '.spec.finalizers=[]' | curl -X PUT http://localhost:8001/api/v1/namespaces/delete-me/finalize -H "Content-Type: application/json" --data @-
 1568  k get ns
 1569  kubectl get ns kapp-controller -o json | jq '.spec.finalizers=[]' | curl -X PUT http://localhost:8001/api/v1/namespaces/kapp-controller/finalize -H "Content-Type: application/json" --data @-
 1570  kubectl get ns kapp-controller -o json | jq '.spec.finalizers=[]' | curl -X PUT http://localhost:8001/api/v1/namespaces/kapp-controllerr/finalize -H "Content-Type: application/json" --data @-
 1571  curl -X  GET http://localhost:8001/api/v1/namespaces/kapp-controller
 1572  kubectl get ns kapp-controller -o json | jq '.spec.finalizers=[]' | curl -X PUT http://localhost:8001/api/v1/namespaces/kapp-controller/finalize -H "Content-Type: application/json" --data @-
 1573  kubectl get ns kapp-controller -o json
 1574  kubectl get ns kapp-controller -o json | jq '.spec.finalizers=[]' | curl -X PUT http://localhost:8001/api/v1/namespaces/kapp-controller/finalize -H "Content-Type: application/json" --data @-
 1575  ls
 1576  kubectl get ns kapp-controller -o json
 1577  ls *.sh
 1578  ./rmns.sh kapp-controller
 1579  ls *.sh
 1580  kubectl get ns kapp-controller -o json
 1581  kubectl get ns kapp-controller -o json | jq '.spec.finalizers=[]' | curl -X PUT http://localhost:8001/api/v1/namespaces/delete-me/finalize -H "Content-Type: application/json" --data @-
 1582  kubectl get ns kapp-controller -o json
 1583  k delete ns kapp-controller
 1584  ls *.sh
 1585  ./rmns.sh kapp-controller
 1586  kapp
 1587  cat ./sa-tap.json | docker login -u _json_key --password-stdin https://gcr.io
 1588  docker login registry.tanzu.vmware.com  -u kmantha@vmware.com -p VMware123!
 1589  export INSTALL_REGISTRY_HOSTNAME="gcr.io"
 1590  export INSTALL_REGISTRY_USERNAME="_json_key"
 1591  export INSTALL_REGISTRY_PASSWORD_FILE="./sa-tap.json"
 1592  export TAP_VERSION="1.1.0"
 1593  imgpkg copy -b registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:${TAP_VERSION} --to-repo ${INSTALL_REGISTRY_HOSTNAME}/TARGET-REPOSITORY/tap-packages
 1594  mgpkg copy -b registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:${TAP_VERSION} --to-repo gcr.io/api-gw-on-gcp/tap-packages
 1595  imgpkg copy -b registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:${TAP_VERSION} --to-repo gcr.io/api-gw-on-gcp/tap-packages
 1596  tanzu secret registry add tap-registry   --username "_json_key" --password "$(cat /home/azureuser/sa-tap.json)" --server "gcr.io" --export-to-all-namespaces --yes --namespace tap-install
 1597  tanzu package repository add tanzu-tap-repository  --url gcr.io/api-gw-on-gcp/tap-package:$TAP_VERSION   --namespace tap-install
 1598  tanzu package repository add tanzu-tap-repository  --url gcr.io/api-gw-on-gcp/tap-package:1.1.0   --namespace tap-install
 1599  tanzu package repository add tanzu-tap-repository  --url gcr.io/api-gw-on-gcp/tap-packages:1.1.0   --namespace tap-install
 1600  tanzu package repository get tanzu-tap-repository --namespace tap-install
 1601  $ tanzu package available list --namespace tap-install
 1602  / Retrieving available packages...
 1603  tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0  --values-file tap3b.yml -n tap-install
 1604  k
 1605  cd tanzu-cluster-essentials
 1606  ll
 1607  tar xzvf tanzu-cluster-essentials-darwin-amd64-1.1.0.tgz
 1608  tar xzvf tanzu-cluster-essentials-linux-amd64-1.1.0.tgz
 1609  export INSTALL_BUNDLE=registry.tanzu.vmware.com/tanzu-cluster-essentials/cluster-essentials-bundle@sha256:ab0a3539da241a6ea59c75c0743e9058511d7c56312ea3906178ec0f3491f51d
 1610  export INSTALL_BUNDLE="registry.tanzu.vmware.com/tanzu-cluster-essentials/cluster-essentials-bundle@sha256:ab0a3539da241a6ea59c75c0743e9058511d7c56312ea3906178ec0f3491f51d"
 1611  env|grep INSTALL
 1612  export INSTALL_REGISTRY_HOSTNAME=registry.tanzu.vmware.com
 1613  export INSTALL_REGISTRY_USERNAME="kmantha@vmware.com"
 1614  export INSTALL_REGISTRY_PASSWORD="VMware123!"
 1615  cd $HOME/tanzu-cluster-essentials
 1616  ./install.sh --yes
 1617  kubectl create ns tap-install
 1618  history|grep tanzu-tap-repository
 1619  tanzu package installed get tap -n tap-install
 1620  tanzu package installed list -A
 1621  kubectl get service envoy -n tanzu-system-ingress
 1622  tanzu package installed list -A
 1623  ytt
 1624  tanzu package installed list -A
 1625  docker login registry.tanzu.vmware.com  -u kmantha@vmware.com -p VMware123!
 1626  cat ./sa-tap.json | docker login -u _json_key --password-stdin https://gcr.io
 1627  tanzu secret registry add registry-credentials --server "gcr.io" --username "_json_key" --password "$(cat /home/azureuser/sa-tap.json)"  --namespace dev1
 1628  k create ns dev1
 1629  tanzu secret registry add registry-credentials --server "gcr.io" --username "_json_key" --password "$(cat /home/azureuser/sa-tap.json)"  --namespace dev1
 1630  history 20
 1631  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1632  tanzu apps workload tail tanzu-java-web-app --since 10m --timestamp --namespace dev1
 1633  k get workload
 1634  k get workload -n dev1
 1635  k describe workload tanzu-java-web-app -n dev1
 1636  k get workload -n dev1
 1637  kubectl logs 
 1638  k logs workload tanzu-java-web-app --since-time='' -n dev1
 1639  k get pods
 1640  k get pods -n dev1
 1641  k get all -n dev1
 1642  k delete workload tanzu-java-web-app -n dev1
 1643  export REGISTRY_HOSTNAME="northamerica-northeast1-docker.pkg.dev/api-gw-on-gcp/ktap"
 1644  export REGISTRY_USERNAME="_json_key"
 1645  export REGISTRY_PASSWORD_FILE="./sa-tap.json"
 1646  export INSTALL_REGISTRY_HOSTNAME="gcr.io"
 1647  export INSTALL_REGISTRY_USERNAME="_json_key"
 1648  export INSTALL_REGISTRY_PASSWORD_FILE="./sa-tap.json"
 1649  k logs workload tanzu-java-web-app --since-time='' -n dev1
 1650  k get all -n dev1
 1651  k describe workload tanzu-java-web-app
 1652  k get supplychain -A
 1653  clear
 1654  k get supplychain -A
 1655  k get crds |grep supply
 1656  k get clustersupplychains
 1657  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1658  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace YOUR-DEVELOPER-NAMESPACE
 1659  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1 --dry-run -oyaml >wl.yaml
 1660  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1 --dry-run -o yaml >wl.yaml
 1661  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1 -oyaml --dry-run  >wl.yaml
 1662  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1 --oyaml --dry-run  >wl.yaml
 1663  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1 --o=yaml --dry-run  >wl.yaml
 1664  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1  --dry-run 
 1665  k delete workload tanzu-java-web-app -n dev1
 1666  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1  --dry-run 
 1667  k describe workload tanzu-java-web-app
 1668  k get workload tanzu-java-web-app -oyaml >wl.txt
 1669  k get workload tanzu-java-web-app -oyaml -n dev1 >wl.txt
 1670  k get workloads -n dev1
 1671  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1  
 1672  k get workloads -n dev1
 1673  k apply -f dev.yml
 1674  tanzu rbac binding add -g GROUP-FOR-APP-VIEWER -n YOUR-NAMESPACE -r app-viewer
 1675  tanzu rbac binding add -g GROUP-FOR-APP-EDITOR -n YOUR-NAMESPACE -r app-editor
 1676  tanzu rbac binding add -g GROUP-FOR-APP-VIEWER -n dev1 -r app-viewer
 1677  tanzu rbac binding add -g GROUP-FOR-APP-EDITOR -n dev1 -r app-editor
 1678  tanzu package installed get tap -n tap-install
 1679  tanzu package installed list -n tap-install
 1680  tanzu package available list -n tap-install
 1681  tanzu apps workload create tanzu-java-web-app \
 1682  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1683  tanzu apps workload tail tanzu-java-web-app --since 10m --timestamp --namespace dev1
 1684  tanzu apps workloads get  tanzu-java-web-app -n dev1
 1685  k apply -f dev_rbac.yaml
 1686  tanzu apps workloads get  tanzu-java-web-app -n dev1
 1687  k delete workload tanzu-java-web-app -n dev1
 1688  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1689  tanzu apps workloads get  tanzu-java-web-app -n dev1
 1690  clear
 1691  k get secrets -n dev1
 1692  k9s
 1693  tanzu apps workloads get  tanzu-java-web-app -n dev1
 1694  k get secrets -n dev1
 1695  k get roles -n dev1
 1696  k get rolebindings -n dev1
 1697  k apply -f dev.yml
 1698  k apply -f dev.yml -n dev1
 1699  k delete workload tanzu-java-web-app -n dev1
 1700  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1701  tanzu apps workloads get  tanzu-java-web-app -n dev1
 1702  tanzu package available get ootb-templates.tanzu.vmware.com/0.7.0 \
 1703  tanzu package available get ootb-templates.tanzu.vmware.com/0.7.0 --values-schema -n tap-install
 1704  tanzu package available list ootb-templates.tanzu.vmware.com/0.7.0 -n tap-install
 1705  clear
 1706  tanzu package install ootb-templates --package-name ootb-templates.tanzu.vmware.com  --version 0.7.0  --namespace tap-install --values-file ootb-templates-values.yaml
 1707  ll
 1708  tanzu package install ootb-templates --package-name ootb-templates.tanzu.vmware.com  --version 0.7.0  --namespace tap-install --values-file ootb-templates.yaml
 1709  k get workloads -A
 1710  kubectl get ClusterSupplyChain source-to-url -oyaml
 1711  kubectl get ClusterSupplyChain source-to-url -oyaml|more
 1712  ll
 1713  ls *3b.yml
 1714  cat *3b.yml
 1715  vim *3b.yml
 1716  tanzu package installed get scanning -n tap-install
 1717  tanzu package installed get grype -n tap-install
 1718  k9s
 1719  kubectl config view --flatten --minify
 1720  k delete ns dev1
 1721  k get ns
 1722  k del ns dev2
 1723  k delete ns dev2
 1724  k create ns dev3
 1725  tanzu secret registry add registry-credentials --server "gcr.io" --username "_json_key" --password "$(cat /home/azureuser/sa-tap.json)"  --namespace dev3
 1726  cat dev.yml
 1727  cat dev_rbac.yml
 1728  cat dev_rbac.yaml
 1729  k apply -f dev.yml -n dev3
 1730  clear
 1731  ls -ltr
 1732  k9s
 1733  tanzu apps workloads get  tanzu-java-web-app -n dev1
 1734  vim *3b*
 1735  ls 3b
 1736  ls *3b*
 1737  cp tap3b.yml tap_testing.yml
 1738  vom tap_testing.yml
 1739  vim tap_testing.yml
 1740  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0 --values-file tap-values.yaml -n tap-install
 1741  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0 --values-file tap_testing.yml -n tap-install
 1742  vim tap_testing.yml
 1743  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0 --values-file tap_testing.yml -n tap-install
 1744  vim tap_testing.yml
 1745  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0 --values-file tap_testing.yml -n tap-install
 1746  ll
 1747  k apply -f tekton-pipeline.yaml -n dev1
 1748  tanzu apps workload create tanzu-java-web-app-testing --git-repo https://github.com/sample-accelerators/tanzu-java-web-app  --git-branch main  --type web  --label apps.tanzu.vmware.com/has-tests=true  --yes
 1749  kubectl get workload,gitrepository,pipelinerun,images.kpack,podintent,app,services.serving -n dev1
 1750  k delete 
 1751  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app  --git-branch main  --type web  --label apps.tanzu.vmware.com/has-tests=true  --yes
 1752  tanzu apps workload get tanzu-java-web-app -n dev1
 1753  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app  --git-branch main  --type web  --label apps.tanzu.vmware.com/has-tests=true  --yes
 1754  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app  --git-branch main  --type web  --label apps.tanzu.vmware.com/has-tests=true  --yes --n dev1
 1755  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app  --git-branch main  --type web  --label apps.tanzu.vmware.com/has-tests=true  --yes -n dev1
 1756  tanzu apps workload get tanzu-java-web-app -n dev1
 1757  kubectl get workload,gitrepository,pipelinerun,images.kpack,podintent,app,services.serving
 1758  kubectl get workload,gitrepository,pipelinerun,images.kpack,podintent,app,services.serving -n dev1
 1759  tanzu package installed get metadata-store -n tap-install
 1760  tanzu apps workload get tanzu-java-web-app -n dev1
 1761  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1762  tanzu apps workload delete tanzu-java-web-app -n dev1
 1763  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1764  tanzu apps workload get tanzu-java-web-app -n dev1
 1765  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1766  tanzu apps workload get tanzu-java-web-app -n dev1
 1767  tanzu apps workload create tanzu-java-web-app --git-repo https://github.com/sample-accelerators/tanzu-java-web-app --git-branch main --type web --label app.kubernetes.io/part-of=tanzu-java-web-app --yes --namespace dev1
 1768  tanzu apps workload get tanzu-java-web-app -n dev1
 1769  k create ns dev2
 1770  k apply -f dev.yml -n dev2
 1771  tanzu rbac binding add -g GROUP-FOR-APP-VIEWER -n dev2 -r app-viewer
 1772  cat dev.yml
 1773  tanzu rbac binding add -g GROUP-FOR-APP-VIEWER -n dev2 -r app-viewer
 1774  tanzu rbac binding add -g GROUP-FOR-APP-VIEWER  -r app-viewer -n dev2
 1775  tanzu rbac binding add -g GROUP-FOR-APP-EDITOR  -r app-editor -n dev2
 1776  k apply -f dev_rbac.yaml -n dev2
 1777  ls -ltr
 1778  ls te*
 1779  cat te*
 1780  k apply -f tekton-pipeline.yaml -n dev3
 1781  tanzu apps workload create tanzu-java-web-app-testing --git-repo https://github.com/sample-accelerators/tanzu-java-web-app  --git-branch main  --type web  --label apps.tanzu.vmware.com/has-tests=true  --yes -n dev3
 1782  clear
 1783  tree
 1784  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0 --values-file tap_testing.yml -n tap-install
 1785  tanzu apps workload update tanzu-java-web-app-testing --git-repo https://github.com/sample-accelerators/tanzu-java-web-app  --git-branch main  --type web --label app.kubernetes.io/part-of=tanzu-java-web-app  --label apps.tanzu.vmware.com/has-tests=true  --yes -n dev3
 1786  tanzu apps workload get tanzu-java-web-app -n dev1
 1787  tanzu apps workload get tanzu-java-web-app -n dev3
 1788  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0 --values-file tap_testing.yml -n tap-install
 1789  ls *scan*
 1790  k apply -f scan-policy.yaml -n dev3
 1791  clear
 1792  tanzu package installed update tap -p tap.tanzu.vmware.com -v 1.1.0 --values-file tap_testing.yml -n tap-install
 1793  tanzu apps workload delete tanzu-java-web-app -n dev3
 1794  tanzu apps workload create tanzu-java-web-app-testing --git-repo https://github.com/sample-accelerators/tanzu-java-web-app  --git-branch main  --type web --label app.kubernetes.io/part-of=tanzu-java-web-app  --label apps.tanzu.vmware.com/has-tests=true  --yes -n dev3
 1795  insight image get --digest DIGEST
 1796  insight image vulnerabilities --digest  DIGEST
 1797  history |grep install
 1798  history |grep install|grep plugin
 1799  tanzu plugin list
 1800  cd $HOME/tanzu
 1801  tanzu plugin install insight --local cli
 1802  tanzu insight health
 1803  tanzu insight health -h
 1804  tanzu insight health
 1805  kubectl get workload,gitrepository,sourcescan,pipelinerun,images.kpack,imagescan,podintent,app,services.serving
 1806  kubectl get workload,gitrepository,sourcescan,pipelinerun,images.kpack,imagescan,podintent,app,services.serving -n dev3
 1807  tanzu insight get -n dev3
 1808  tanzu insight get image -n dev3
 1809  tanzu insight get image -n dev3 -h
 1810  tanzu insight get image -h
 1811  tanzu insight get image --help
 1812  kubectl get pipelinerun,images.kpack,imagescan
 1813  kubectl get pipelinerun,images.kpack,imagescan -n dev3
 1814  kubectl get images.kpack,imagescan -n dev3
 1815  kubectl get imagescan -n dev3
 1816  tanzu insight health
 1817  insight health
 1818  history
 1819  kubectl get secret app-ts-cert
 1820  kubectl get secret app-ts-cert -n metadata-store
 1821  kubectl get secret app-tls-cert -n metadata-store
 1822  kubectl get secret app-tls-cert -n metadata-store -o json|jq -r '.data."ca.crt"'|base64 -d /tmp/ca.crt
 1823  cat /tmp/ca.crt
 1824  kubectl get secret app-tls-cert -n metadata-store -o json|jq -r '.data."ca.crt"'|base64 -d > /tmp/ca.crt
 1825  cat /tmp/ca.crt
 1826  kubectl get secrets -o jsonpath="{.items[?(@.metadata.annotations['kubernetes\.io/service-account\.name']=='default')].data.token}"|base64 --decode
 1827  kubectl get secret app-tls-cert -n metadata-store -o json|jq -r '.data."ca.crt"'|base64 -d > /tmp/ca.crt
 1828  kubectl get secret ingress-cert -n metadata-store -o json | jq -r '.data."ca.crt"' | base64 -d > insight-ca.crt
 1829  kubectl get service/metadata-store-app --namespace metadata-store 
 1830  kubectl get service/metadata-store-app --namespace metadata-store -o json
 1831  kubectl describe svc envoy -n tanzu-system-ingress
 1832  history 40
 1833  history 100|more
 1834  history 300 > hist_dev3.txt
